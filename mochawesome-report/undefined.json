{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2022-07-07T17:24:55.689Z",
    "end": "2022-07-07T17:24:57.080Z",
    "duration": 1391,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2def92e1-a8cf-4b23-80b8-091ccd4e22a1",
      "title": "",
      "fullFile": "C:\\Users\\harshita saxena\\OneDrive\\Desktop\\demo\\test\\demoTest.js",
      "file": "\\test\\demoTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0d0b2099-d90c-41c5-85b8-81f3731bd44c",
          "title": "Contract: Demo",
          "fullFile": "C:\\Users\\harshita saxena\\OneDrive\\Desktop\\demo\\test\\demoTest.js",
          "file": "\\test\\demoTest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: prepare suite in \"Contract: Demo\"",
              "fullTitle": "Contract: Demo \"before all\" hook: prepare suite in \"Contract: Demo\"",
              "timedOut": false,
              "duration": 55,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(runner.BEFORE_TIMEOUT);\nawait runner.initialize();",
              "err": {},
              "uuid": "445759aa-0fef-43cb-9208-a5c6368d55a4",
              "parentUUID": "0d0b2099-d90c-41c5-85b8-81f3731bd44c",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: before test in \"Contract: Demo\"",
              "fullTitle": "Contract: Demo \"before each\" hook: before test in \"Contract: Demo\"",
              "timedOut": false,
              "duration": 4,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await runner.startTest();",
              "err": {},
              "uuid": "71d705af-da5d-46ca-a03a-635cbd043738",
              "parentUUID": "0d0b2099-d90c-41c5-85b8-81f3731bd44c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook: after test in \"Contract: Demo\"",
              "fullTitle": "Contract: Demo \"after each\" hook: after test in \"Contract: Demo\"",
              "timedOut": false,
              "duration": 19,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await runner.endTest(this);",
              "err": {},
              "uuid": "315579ab-b1fc-45e2-81c4-da0f85dc1027",
              "parentUUID": "0d0b2099-d90c-41c5-85b8-81f3731bd44c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Should deploy smart contract properply",
              "fullTitle": "Contract: Demo Should deploy smart contract properply",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const demo=await Demo.deployed();\nassert(demo.address !== '');\nconst manager_add= await demo.owner();\nconst deployer_add=accounts[0];\nassert.equal(manager_add,deployer_add,\"manager is not deployer\"); \n\n//const owner=await demo.address(this);\n//const ownerBalance= await demo.balanceOf(owner.address);\n//assert(ownerBalance==balanceOf(owner.address));\n        // const owner=await demo.getOwner();\n//assert.equal(owner,accounts[0],'owner should be acc0');",
              "err": {},
              "uuid": "2b602b62-b2df-4589-a478-a0a0b7c0938a",
              "parentUUID": "0d0b2099-d90c-41c5-85b8-81f3731bd44c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return balance of the owner",
              "fullTitle": "Contract: Demo Should return balance of the owner",
              "timedOut": false,
              "duration": 1245,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const demo=await Demo.deployed();\nconst manager_add= await demo.owner();\nconst ownerBal=await demo.balanceOf(manager_add);\nconst Bal=await demo.balanceOf(accounts[0]);\nassert.equal(ownerBal,Bal,\"wrong balance\");",
              "err": {
                "message": "Error: Returned error: header not found",
                "estack": "Error: Returned error: header not found\n    at Context.<anonymous> (test\\demoTest.js:22:35)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "b236efe7-71c9-44d1-8f90-6b0a9cac383a",
              "parentUUID": "0d0b2099-d90c-41c5-85b8-81f3731bd44c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b602b62-b2df-4589-a478-a0a0b7c0938a"
          ],
          "failures": [
            "b236efe7-71c9-44d1-8f90-6b0a9cac383a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1281,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "undefined.json",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportFilename": "undefined.json",
        "json": true,
        "html": false
      },
      "version": "6.2.0"
    }
  }
}